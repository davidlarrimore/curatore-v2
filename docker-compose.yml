# ============================================================================
# Curatore v2 - Docker Compose (dev)
# ============================================================================
version: "3.9"

services:
  # --------------------------------------------------------------------------
  # BACKEND: FastAPI app
  # --------------------------------------------------------------------------
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: curatore-backend
    volumes:
      # Hot-reload app code without stomping other layers
      - ./backend/app:/app/app
      # Shared storage (authoritative on host)
      - ./files:/app/files
    environment:
      - PYTHONUNBUFFERED=1
      - DEBUG=${DEBUG:-false}
      - CORS_ORIGINS=${CORS_ORIGINS:-["http://localhost:3000"]}
      # LLM
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - OPENAI_VERIFY_SSL=${OPENAI_VERIFY_SSL:-true}
      - OPENAI_TIMEOUT=${OPENAI_TIMEOUT:-60}
      - OPENAI_MAX_RETRIES=${OPENAI_MAX_RETRIES:-3}
      # OCR
      - OCR_LANG=${OCR_LANG:-eng}
      - OCR_PSM=${OCR_PSM:-3}
      # FILES (absolute in-container)
      - FILES_ROOT=/app/files
      - UPLOAD_DIR=/app/files/uploaded_files
      - PROCESSED_DIR=/app/files/processed_files
      - BATCH_DIR=/app/files/batch_files
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-52428800}
      # Extraction service (optional; when enabled backend will call it for PDFs/DOCX, etc.)
      - EXTRACTION_SERVICE_URL=${EXTRACTION_SERVICE_URL:-http://extraction:8010}
      - EXTRACTION_SERVICE_TIMEOUT=${EXTRACTION_SERVICE_TIMEOUT:-60}
      - EXTRACTION_SERVICE_VERIFY_SSL=${EXTRACTION_SERVICE_VERIFY_SSL:-true}
      # Content extractor switch: default | docling | none
      - CONTENT_EXTRACTOR=${CONTENT_EXTRACTOR:-default}
      # Docling configuration (when CONTENT_EXTRACTOR=docling)
      - DOCLING_SERVICE_URL=${DOCLING_SERVICE_URL:-http://docling:5001}
      # Docling extract path is fixed per API (/v1/extract)
      - DOCLING_TIMEOUT=${DOCLING_TIMEOUT:-60}
      - DOCLING_VERIFY_SSL=${DOCLING_VERIFY_SSL:-true}
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis

  # --------------------------------------------------------------------------
  # WORKER: Celery worker
  # --------------------------------------------------------------------------
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: curatore-worker
    # Auto-restart worker on code changes using watchdog/watchmedo
    command: >
      sh -c "watchmedo auto-restart --directory=/app/app --pattern=*.py --recursive -- 
      celery -A app.celery_app worker -Q ${CELERY_DEFAULT_QUEUE:-processing} -l info --concurrency=${CELERY_CONCURRENCY:-2}"
    environment:
      - PYTHONUNBUFFERED=1
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/1}
      - CELERY_DEFAULT_QUEUE=${CELERY_DEFAULT_QUEUE:-processing}
      # Share the same storage config
      - FILES_ROOT=/app/files
      - UPLOAD_DIR=/app/files/uploaded_files
      - PROCESSED_DIR=/app/files/processed_files
      - BATCH_DIR=/app/files/batch_files
      # Extraction service (match backend)
      - EXTRACTION_SERVICE_URL=${EXTRACTION_SERVICE_URL:-http://extraction:8010}
      - EXTRACTION_SERVICE_TIMEOUT=${EXTRACTION_SERVICE_TIMEOUT:-60}
      - EXTRACTION_SERVICE_VERIFY_SSL=${EXTRACTION_SERVICE_VERIFY_SSL:-true}
      # Content extractor switch and Docling (match backend)
      - CONTENT_EXTRACTOR=${CONTENT_EXTRACTOR:-default}
      - DOCLING_SERVICE_URL=${DOCLING_SERVICE_URL:-http://docling:5001}
      # Docling extract path is fixed per API (/v1/extract)
      - DOCLING_TIMEOUT=${DOCLING_TIMEOUT:-60}
      - DOCLING_VERIFY_SSL=${DOCLING_VERIFY_SSL:-true}
    volumes:
      - ./backend/app:/app/app
      - ./files:/app/files
    depends_on:
      - redis

  # --------------------------------------------------------------------------
  # REDIS: Broker/result backend
  # --------------------------------------------------------------------------
  redis:
    image: redis:7-alpine
    container_name: curatore-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  # --------------------------------------------------------------------------
  # FRONTEND: Next.js app
  # --------------------------------------------------------------------------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: curatore-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    command: npm run dev
    ports:
      - "3000:3000"
    depends_on:
      - backend

  # --------------------------------------------------------------------------
  # EXTRACTION: Document extraction microservice (optional but recommended)
  # --------------------------------------------------------------------------
  extraction:
    build:
      context: ./extraction-service
      dockerfile: Dockerfile
    container_name: curatore-extraction
    volumes:
      # Hot-reload extraction service code
      - ./extraction-service/app:/app/app
    ports:
      - "8010:8010"
    environment:
      - CORS_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000"]
      - OCR_LANG=${OCR_LANG:-eng}
      - OCR_PSM=${OCR_PSM:-3}
    # Run with reload for live dev edits
    command: uvicorn app.main:app --host 0.0.0.0 --port 8010 --reload


  # --------------------------------------------------------------------------
  # DOCLING: As a second Extraction Engine option
  # --------------------------------------------------------------------------
  docling:
    image: ${DOCLING_IMAGE}:${DOCLING_TAG}
    container_name: ${DOCLING_CONTAINER_NAME}
    restart: unless-stopped
    ports:
      - "${DOCLING_PORT}:5001"
    environment:
      DOCLING_SERVE_ENABLE_UI: ${DOCLING_SERVE_ENABLE_UI:-"1"}
      DOCLING_SERVE_ENABLE_REMOTE_SERVICES: "1"
      DOCLING_SERVE_ARTIFACTS_PATH: ""
    extra_hosts:
      - "host.docker.internal:host-gateway"
